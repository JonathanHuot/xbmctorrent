import os
from xbmctorrent import plugin
from xbmctorrent.scrapers import scraper
from xbmctorrent.ga import tracked
from xbmctorrent.caching import cached_route
from xbmctorrent.utils import ensure_fanart
from xbmctorrent.library import library_context
from xbmcswift2.logger import log

BASE_URL = plugin.get_setting("base_cpb")
HEADERS = {
    "Referer": BASE_URL,
}

SORT_DATE="trie-date"
SORT_NOM="trie-nom"
SORT_TELECHARGEMENT="trie-telechargement"
SORT_SEEDS="trie-seeds"
SORT_LEECHS="trie-leechs"
SORT_CATEGORIE="trie-categorie"

SORT_DIRECTION_ASC="-a"
SORT_DIRECTION_DESC="-d"

@scraper("CPasBien - Recherche Torrent Francais", "%s/_template/cpasbien/_styles/_images/header1.jpg" % BASE_URL)
@plugin.route("/cpb")
@ensure_fanart
@tracked
def cpb_index():
    plugin.redirect(plugin.url_for("cpb_search"))


@plugin.route("/cpb/search/<query>/<sort>/<page>")
@library_context
@ensure_fanart
@tracked
def cpb_page(query, sort, page):
    from bs4 import BeautifulSoup
    from xbmctorrent.utils import url_get

    url_adr = "%s/recherche/" % BASE_URL
    url_adr = url_adr + query.replace(" ","+") + "/page-" + str(page) + "," + sort
    html_data = url_get(url_adr)

    soup = BeautifulSoup(html_data, "html5lib")
    name_nodes = soup.findAll("td", "torrent-aff")

    for name_node in name_nodes:
        title = name_node.find("a").text
        html_uri=name_node.find("a")["href"]
        torrent_basename = os.path.basename(html_uri)
        uri_addr= BASE_URL + "/_torrents/" + torrent_basename.replace(".html",".torrent")
        img_addr = BASE_URL + "/_pictures/" + torrent_basename.replace(".html",".jpg")
        yield {
            "label": title,
            "path": plugin.url_for("play", uri=uri_addr),
            "is_playable": True,
            "thumbnail" : img_addr , 
            "properties": {
              "fanart_image" : img_addr , 
            } ,
        }
    yield {
        "label": ">> Next page",
        "path": plugin.url_for("cpb_page", query=query, sort=sort, page=int(page) + 1),
        "is_playable": False,
    }

@plugin.route("/cpb/search")
@tracked
def cpb_search():
    query = plugin.request.args_dict.pop("query", None)
    if not query:
        query = plugin.keyboard("", "XBMCtorrent - CPasBien - Recherche")
    if query:
        plugin.redirect(plugin.url_for("cpb_page", query=query, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0, **plugin.request.args_dict))
